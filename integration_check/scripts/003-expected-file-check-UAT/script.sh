#!/bin/sh
# GENERATED FILE LOCAL EQUALITY CHECK
# This script is used to check whether the generated file is equal to the expected file.

if [ $# -ne 2 ] ; then
    echo "Illegal number of parameters (2 mandatory, was $#)" >&2
    echo "usage: script.sh /PATH/TO/EXPECTED_OUTPUT.expected /PATH/TO/ACTUAL_OUTPUT.key" >&2
    exit 2
fi

# Parameters:
# Path to expected output file generated with the CLI
PATH_TO_EXPECTED=$1
# Path to actual output file generated by the Batch Service
PATH_TO_ACTUAL=$2

# Use timestamp to make temporary directory name unique
NOW=$(date +%s)
TEMPORARY_DIR="temporary"$NOW

# Create a temporary directory and files
mkdir ./"$TEMPORARY_DIR" > /dev/null
touch ./"$TEMPORARY_DIR"/expected.csv
touch ./"$TEMPORARY_DIR"/actual.csv

# Sort files
sort < "$PATH_TO_EXPECTED" > ./"$TEMPORARY_DIR"/expected.csv
sort < "$PATH_TO_ACTUAL" > ./"$TEMPORARY_DIR"/actual.csv

# Save differences in a temporary file
diff ./"$TEMPORARY_DIR"/expected.csv ./"$TEMPORARY_DIR"/actual.csv > ./"$TEMPORARY_DIR"/diff.txt

if [ -z "$(cat ./"$TEMPORARY_DIR"/diff.txt)" ]
then
  echo PASS
  rm -r ./"$TEMPORARY_DIR"
else
  echo FAIL
  cat ./"$TEMPORARY_DIR"/diff.txt
fi
